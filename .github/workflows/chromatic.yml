name: 'Chromatic Deployment'

on:
  push:
    branches:
      - develop
    paths:
      - 'apps/web/**'
      - 'packages/ui/**'

jobs:
  setup:
    name: 'Setup Environment'
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.pnpm-cache.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

  chromatic-deploy:
    name: 'Deploy to Chromatic'
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      storybook-url: ${{ steps.chromatic.outputs.storybookUrl }}
      has-changes: ${{ steps.chromatic.outputs.storybookUrl != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Publish to Chromatic
        id: chromatic
        uses: chromaui/action@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/web
          exitOnceUploaded: true
          onlyChanged: true
          autoAcceptChanges: true

  notifications:
    name: 'Send Notifications'
    needs: chromatic-deploy
    if: needs.chromatic-deploy.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: PR Auto Comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ➡️ 추가된 Storybook 미리보기: ${{ needs.chromatic-deploy.outputs.storybook-url }}

            변경사항을 확인해주세요! 🔍

      - name: Discord Notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-title: 'Storybook 변경 사항 발견 😃'
          embed-description: |
            작업: "${{ github.event.pull_request.title }}" 에서 추가된 Storybook을 확인해주세요!

            📚 변경사항 확인하기
          embed-url: ${{ needs.chromatic-deploy.outputs.storybook-url }}
